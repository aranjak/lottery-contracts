{
  "contractName": "Discounter",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "numberTickets",
          "type": "uint256"
        }
      ],
      "name": "getNumberOfFreeTickets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numberTickets\",\"type\":\"uint256\"}],\"name\":\"getNumberOfFreeTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/aranjak/Code-BC/lottery-contracts/contracts/Discounter.sol\":\"Discounter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/aranjak/Code-BC/lottery-contracts/contracts/Discounter.sol\":{\"keccak256\":\"0x6e63f7d6303ec512a4c42090fe6ea62bcd2b2aec94d293d0ad88c7e00cca35fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3ad06c1949fe03f8a43d7e35beba03689edd698008e99626d53ba21d9b55251\",\"dweb:/ipfs/QmQzLTbkE2Bffb6kyb4aaGDDpAypjhFNYoMtPUNvMtaKTz\"]},\"/Users/aranjak/Code-BC/lottery-contracts/contracts/interfaces/IDiscounter.sol\":{\"keccak256\":\"0x2e1c6be7f2325b8ed1666c61d0151128bd90ad03a23f2fc322826cd315fb911d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43c79c5f3ae11d926b90997955e3dc98b0903c6b1b90e9d2f652d817a8c8054e\",\"dweb:/ipfs/QmQuLBTQ2W97N7t3UA9LrPZ18TEwE2SyLtaXU1t5muMGLn\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060e68061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638ff5e23c14602d575b600080fd5b603c6038366004607c565b604e565b60405190815260200160405180910390f35b60006001600160a01b0383161580159060675750600382115b156072575060016076565b5060005b92915050565b60008060408385031215608d578182fd5b82356001600160a01b038116811460a2578283fd5b94602093909301359350505056fea264697066735822122078c63c0811d34cd43f0f965de3a963b110e75ce5b10afb285e4b83978a99270a64736f6c63430008040033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c80638ff5e23c14602d575b600080fd5b603c6038366004607c565b604e565b60405190815260200160405180910390f35b60006001600160a01b0383161580159060675750600382115b156072575060016076565b5060005b92915050565b60008060408385031215608d578182fd5b82356001600160a01b038116811460a2578283fd5b94602093909301359350505056fea264697066735822122078c63c0811d34cd43f0f965de3a963b110e75ce5b10afb285e4b83978a99270a64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:572:15",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:15",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "101:287:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "147:26:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "156:6:15"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "164:6:15"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "149:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "149:22:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "149:22:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "122:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "131:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "118:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "118:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "143:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "114:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:15"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "182:36:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "208:9:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "195:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "195:23:15"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "186:5:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "281:26:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "290:6:15"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "298:6:15"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "283:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "283:22:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "283:22:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "240:5:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "251:5:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "266:3:15",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "271:1:15",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "262:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "262:11:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "275:1:15",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "258:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "258:19:15"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "247:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "247:31:15"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "237:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "237:42:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "230:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "230:50:15"
                  },
                  "nodeType": "YulIf",
                  "src": "227:2:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "316:15:15",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "326:5:15"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "316:6:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "340:42:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "367:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "378:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "363:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "363:18:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "350:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "350:32:15"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "340:6:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "59:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "70:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "82:6:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "90:6:15",
                "type": ""
              }
            ],
            "src": "14:374:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "494:76:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "504:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "516:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "527:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "512:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "512:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "504:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "546:9:15"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "557:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "539:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "539:25:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "539:25:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "463:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "474:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "485:4:15",
                "type": ""
              }
            ],
            "src": "393:177:15"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 15,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "134:266:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "134:266:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;175:223;;;;;;:::i;:::-;;:::i;:::-;;;539:25:15;;;527:2;512:18;175:223:0;;;;;;;;277:7;-1:-1:-1;;;;;299:19:0;;;;;;:40;;;338:1;322:13;:17;299:40;296:78;;;-1:-1:-1;362:1:0;355:8;;296:78;-1:-1:-1;390:1:0;175:223;;;;;:::o;14:374:15:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:2;;;164:6;156;149:22;111:2;195:23;;-1:-1:-1;;;;;247:31:15;;237:42;;227:2;;298:6;290;283:22;227:2;326:5;378:2;363:18;;;;350:32;;-1:-1:-1;;;101:287:15:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"./interfaces/IDiscounter.sol\";\n\n//This is a Mock discounter for tests\ncontract Discounter is IDiscounter {\n    function getNumberOfFreeTickets(address buyer, uint256 numberTickets) external override pure returns (uint256) {\n        if(buyer != address(0) && numberTickets > 3) {\n            return 1;\n        }\n        return 0;\n    }\n}",
  "sourcePath": "/Users/aranjak/Code-BC/lottery-contracts/contracts/Discounter.sol",
  "ast": {
    "absolutePath": "/Users/aranjak/Code-BC/lottery-contracts/contracts/Discounter.sol",
    "exportedSymbols": {
      "Discounter": [
        32
      ],
      "IDiscounter": [
        2432
      ]
    },
    "id": 33,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:0"
      },
      {
        "absolutePath": "/Users/aranjak/Code-BC/lottery-contracts/contracts/interfaces/IDiscounter.sol",
        "file": "./interfaces/IDiscounter.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 33,
        "sourceUnit": 2433,
        "src": "56:38:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "IDiscounter",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2432,
              "src": "157:11:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "157:11:0"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 32,
        "linearizedBaseContracts": [
          32,
          2432
        ],
        "name": "Discounter",
        "nameLocation": "143:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              2431
            ],
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "286:112:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 19,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 14,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "299:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 17,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "316:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 16,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "308:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "308:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "308:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "299:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 20,
                        "name": "numberTickets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "322:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "33",
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "338:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "src": "322:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "299:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27,
                  "nodeType": "IfStatement",
                  "src": "296:78:0",
                  "trueBody": {
                    "id": 26,
                    "nodeType": "Block",
                    "src": "341:33:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 24,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "362:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 13,
                        "id": 25,
                        "nodeType": "Return",
                        "src": "355:8:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "390:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 13,
                  "id": 29,
                  "nodeType": "Return",
                  "src": "383:8:0"
                }
              ]
            },
            "functionSelector": "8ff5e23c",
            "id": 31,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumberOfFreeTickets",
            "nameLocation": "184:22:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "254:8:0"
            },
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "215:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "207:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "207:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "numberTickets",
                  "nameLocation": "230:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "222:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "222:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "206:38:0"
            },
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "277:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "277:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "276:9:0"
            },
            "scope": 32,
            "src": "175:223:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 33,
        "src": "134:266:0",
        "usedErrors": []
      }
    ],
    "src": "32:368:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/aranjak/Code-BC/lottery-contracts/contracts/Discounter.sol",
    "exportedSymbols": {
      "Discounter": [
        32
      ],
      "IDiscounter": [
        2432
      ]
    },
    "id": 33,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:0"
      },
      {
        "absolutePath": "/Users/aranjak/Code-BC/lottery-contracts/contracts/interfaces/IDiscounter.sol",
        "file": "./interfaces/IDiscounter.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 33,
        "sourceUnit": 2433,
        "src": "56:38:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "IDiscounter",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2432,
              "src": "157:11:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "157:11:0"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 32,
        "linearizedBaseContracts": [
          32,
          2432
        ],
        "name": "Discounter",
        "nameLocation": "143:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              2431
            ],
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "286:112:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 19,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 14,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "299:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 17,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "316:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 16,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "308:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "308:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "308:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "299:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 20,
                        "name": "numberTickets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "322:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "33",
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "338:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "src": "322:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "299:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27,
                  "nodeType": "IfStatement",
                  "src": "296:78:0",
                  "trueBody": {
                    "id": 26,
                    "nodeType": "Block",
                    "src": "341:33:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 24,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "362:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 13,
                        "id": 25,
                        "nodeType": "Return",
                        "src": "355:8:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "390:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 13,
                  "id": 29,
                  "nodeType": "Return",
                  "src": "383:8:0"
                }
              ]
            },
            "functionSelector": "8ff5e23c",
            "id": 31,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumberOfFreeTickets",
            "nameLocation": "184:22:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "254:8:0"
            },
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "215:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "207:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "207:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "numberTickets",
                  "nameLocation": "230:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "222:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "222:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "206:38:0"
            },
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "277:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "277:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "276:9:0"
            },
            "scope": 32,
            "src": "175:223:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 33,
        "src": "134:266:0",
        "usedErrors": []
      }
    ],
    "src": "32:368:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-10-07T14:36:22.079Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}